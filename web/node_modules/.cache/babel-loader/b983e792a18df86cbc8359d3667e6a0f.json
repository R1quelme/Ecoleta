{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\mathe\\\\Desktop\\\\Cursos\\\\nlw1\\\\web\\\\src\\\\pages\\\\CreatePoint\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport { Map, TileLayer, Marker } from 'react-leaflet';\nimport axios from 'axios';\nimport api from '../../services/api';\nimport './styles.css';\nimport logo from \"../../assets/logo.svg\"; //array ou objeto: manualmente informar o tipo da variavel\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreatePoint = () => {\n  _s();\n\n  const [items, setItems] = useState([]);\n  const [ufs, setUfs] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [initialPosition, setInitialPosition] = useState([0, 0]);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    whatsapp: ''\n  });\n  const [selectedUf, setSelectedUf] = useState('0');\n  const [selectedCity, setSelectedCity] = useState('0');\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [selectedPosition, setSelectedPosition] = useState([0, 0]);\n  const history = useHistory();\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      // console.log(position)\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setInitialPosition([latitude, longitude]);\n    });\n  }, []);\n  useEffect(() => {\n    api.get('items').then(response => {\n      setItems(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\n      const ufInitials = response.data.map(uf => uf.sigla);\n      setUfs(ufInitials);\n    });\n  }, []);\n  useEffect(() => {\n    //carregar as cidades sempre que a UF mandar\n    if (selectedUf === '0') {\n      return;\n    }\n\n    axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`).then(response => {\n      const cityNames = response.data.map(city => city.nome);\n      setCities(cityNames);\n    });\n  }, [selectedUf]);\n\n  function handleSelectUF(event) {\n    const uf = event.target.value;\n    setSelectedUf(uf);\n  }\n\n  function handleSelectCity(event) {\n    const city = event.target.value;\n    setSelectedCity(city);\n  }\n\n  function handleMapClick(event) {\n    setSelectedPosition([event.latlng.lat, event.latlng.lng]);\n  }\n\n  function handleImputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  }\n\n  function handleSelectItem(id) {\n    const alreadySelected = selectedItems.findIndex(item => item === id);\n\n    if (alreadySelected >= 0) {\n      const filteredItems = selectedItems.filter(item => item !== id);\n      setSelectedItems(filteredItems);\n    } else {\n      setSelectedItems([...selectedItems, id]);\n    }\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const {\n      name,\n      email,\n      whatsapp\n    } = formData;\n    const uf = selectedUf;\n    const city = selectedCity;\n    const [latitude, longitude] = selectedPosition;\n    const items = selectedItems;\n    const data = {\n      name,\n      email,\n      whatsapp,\n      uf,\n      city,\n      latitude,\n      longitude,\n      items\n    };\n    console.log(data);\n    await api.post('points', data);\n    alert('Ponto de coleta criado');\n    history.push('/');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-create-point\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Ecoleta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: [/*#__PURE__*/_jsxDEV(FiArrowLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), \"Voltar para home\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" Cadastro do \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 34\n        }, this), \" ponto de coleta\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Dados\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Nome da entidade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              id: \"name\",\n              onChange: handleImputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"E-mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              id: \"email\",\n              onChange: handleImputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Whatsapp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"whatsapp\",\n              id: \"whatsapp\",\n              onChange: handleImputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Endere\\xE7o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Selecione o endere\\xE7o no mapa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Map, {\n          center: initialPosition,\n          zoom: 15,\n          onclick: handleMapClick,\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Marker, {\n            position: selectedPosition\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"uf\",\n              children: \"Estado (UF)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"uf\",\n              id: \"uf\",\n              value: selectedUf,\n              onChange: handleSelectUF,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"0\",\n                children: \"Selecione uma UF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 33\n              }, this), ufs.map(uf => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: uf,\n                children: uf\n              }, uf, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"city\",\n              children: \"Cidade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"city\",\n              id: \"city\",\n              value: selectedCity,\n              onChange: handleSelectCity,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"0\",\n                children: \"Selecione uma cidade\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 33\n              }, this), cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: city,\n                children: city\n              }, city, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Itens de coleta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Selecione um ou mais itens abaixo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"items-grid\",\n          children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleSelectItem(item.id),\n            className: selectedItems.includes(item.id) ? 'selected' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.image_url,\n              alt: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 29\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Cadastrar ponto de coleta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreatePoint, \"/BxCauujUDB0K15nwcz1vdTOm2Q=\", false, function () {\n  return [useHistory];\n});\n\n_c = CreatePoint;\nexport default CreatePoint;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePoint\");","map":{"version":3,"sources":["D:/Users/mathe/Desktop/Cursos/nlw1/web/src/pages/CreatePoint/index.tsx"],"names":["React","useEffect","useState","Link","useHistory","FiArrowLeft","Map","TileLayer","Marker","axios","api","CreatePoint","items","setItems","ufs","setUfs","cities","setCities","initialPosition","setInitialPosition","formData","setFormData","name","email","whatsapp","selectedUf","setSelectedUf","selectedCity","setSelectedCity","selectedItems","setSelectedItems","selectedPosition","setSelectedPosition","history","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","get","then","response","data","ufInitials","map","uf","sigla","cityNames","city","nome","handleSelectUF","event","target","value","handleSelectCity","handleMapClick","latlng","lat","lng","handleImputChange","handleSelectItem","id","alreadySelected","findIndex","item","filteredItems","filter","handleSubmit","preventDefault","console","log","post","alert","push","logo","includes","image_url","title"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, ChangeEvent, FormEvent} from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport { Map, TileLayer, Marker } from 'react-leaflet';\nimport axios from 'axios';\nimport { LeafletMouseEvent } from 'leaflet';\nimport api from '../../services/api';\n\nimport './styles.css';\n\nimport logo from '../../assets/logo.svg'\n\n//array ou objeto: manualmente informar o tipo da variavel\ninterface Item {\n    id: number;\n    title: string;\n    image_url: string;\n}\n\ninterface IBGEUFResponse {\n    sigla: string;\n}\n\ninterface IBGECityResponse {\n    nome: string;\n}\n\nconst CreatePoint = () => {\n    const [items, setItems] = useState<Item[]>([]);\n    const [ufs, setUfs] = useState<string[]>([])\n    const [cities, setCities] = useState<string[]>([]);\n\n    const [initialPosition, setInitialPosition]  = useState<[number, number]>([0, 0]);\n\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        whatsapp: '',\n    })\n\n    const [selectedUf, setSelectedUf] = useState('0');\n    const [selectedCity, setSelectedCity] = useState('0');\n    const [selectedItems, setSelectedItems] = useState<number[]>([]);\n    const [selectedPosition, setSelectedPosition]  = useState<[number, number]>([0, 0]);\n\n    const history = useHistory(); \n\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition(position => {\n            // console.log(position)\n            const {latitude, longitude} = position.coords;\n\n            setInitialPosition([latitude, longitude])\n        });\n    }, []);\n\n    useEffect(() => {\n      api.get('items').then(response => {\n          setItems(response.data);\n      });\n    }, []);\n\n    useEffect(() => {\n        axios.get<IBGEUFResponse[]>('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\n            const ufInitials = response.data.map(uf => uf.sigla)\n\n            setUfs(ufInitials);\n        });\n    }, []);\n\n    useEffect(() => {\n        //carregar as cidades sempre que a UF mandar\n        if(selectedUf === '0') {\n            return;\n        }\n\n        axios.get<IBGECityResponse[]>(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`).then(response => {\n            const cityNames = response.data.map(city => city.nome)\n\n            setCities(cityNames);\n        });\n    }, [selectedUf]);\n\n    function handleSelectUF(event: ChangeEvent<HTMLSelectElement>) {\n       const uf = event.target.value;\n\n       setSelectedUf(uf);\n    }\n\n    function handleSelectCity(event: ChangeEvent<HTMLSelectElement>) {\n        const city = event.target.value;\n \n        setSelectedCity(city); \n     }\n\n    function handleMapClick(event: LeafletMouseEvent){\n        setSelectedPosition([\n            event.latlng.lat,\n            event.latlng.lng,\n        ]) \n    }\n\n    function handleImputChange(event: ChangeEvent<HTMLInputElement>) {\n        const { name, value } = event.target;\n\n        setFormData({ ...formData, [name]: value })\n    }\n\n    function handleSelectItem(id: number){\n        const alreadySelected = selectedItems.findIndex(item => item === id);\n\n        if(alreadySelected >= 0) {\n            const filteredItems = selectedItems.filter(item => item !== id);\n\n            setSelectedItems(filteredItems);\n       } else {\n           setSelectedItems([ ...selectedItems, id])\n       }\n    }\n\n    async function handleSubmit(event: FormEvent) {\n        event.preventDefault();\n\n        const { name, email, whatsapp } = formData;\n        const uf = selectedUf;\n        const city = selectedCity;\n        const [latitude, longitude] = selectedPosition;\n        const items = selectedItems;\n\n        const data = {\n            name,\n            email,\n            whatsapp,\n            uf,\n            city,\n            latitude,\n            longitude,\n            items\n        };\n        console.log(data);\n\n        await api.post('points', data)\n\n        alert('Ponto de coleta criado')\n\n        history.push('/')\n    }\n\n    return (\n        <div id=\"page-create-point\">\n            <header>\n                <img src={logo} alt=\"Ecoleta\" />\n            \n                <Link to=\"/\">\n                    <FiArrowLeft />\n                    Voltar para home\n                </Link>\n            </header>\n\n            <form onSubmit={handleSubmit}>\n                <h1> Cadastro do <br /> ponto de coleta</h1>\n\n                <fieldset>\n                    <div>\n                        <legend>\n                            <h2>Dados</h2>\n                        </legend>\n        \n                        <div className=\"field\">\n                            <label htmlFor=\"name\">Nome da entidade</label>\n                            <input \n                                type=\"text\"\n                                name=\"name\"\n                                id=\"name\"\n                                onChange={handleImputChange}\n                            />\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"name\">E-mail</label>\n                            <input \n                                type=\"email\"\n                                name=\"email\"\n                                id=\"email\"\n                                onChange={handleImputChange}\n\n                            />\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"name\">Whatsapp</label>\n                            <input \n                                type=\"text\"\n                                name=\"whatsapp\"\n                                id=\"whatsapp\"\n                                onChange={handleImputChange}\n                            />\n                        </div>\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <legend>\n                        <h2>Endereço</h2>\n                        <span>Selecione o endereço no mapa</span>\n                    </legend>\n\n                    <Map center={initialPosition} zoom={15} onclick={handleMapClick}>\n                    \n                        <TileLayer\n                            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                        />\n\n                        <Marker position={selectedPosition} />\n                    </Map>\n\n                    <div className=\"field-group\">\n                        <div className=\"field\">\n                            <label htmlFor=\"uf\">Estado (UF)</label>\n                            <select \n                                name=\"uf\" \n                                id=\"uf\" \n                                value={selectedUf} \n                                onChange={handleSelectUF}\n                            >\n                                <option value=\"0\">Selecione uma UF</option>\n                                {ufs.map(uf => (\n                                    <option key={uf} value={uf}>{uf}</option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"city\">Cidade</label>\n                            <select \n                              name=\"city\" \n                              id=\"city\"\n                              value={selectedCity}\n                              onChange={handleSelectCity}\n                            >\n                                <option value=\"0\">Selecione uma cidade</option>\n                                {cities.map(city => (\n                                    <option key={city} value={city}>{city}</option>\n                                ))}\n                            </select>\n                        </div>\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <legend>\n                        <h2>Itens de coleta</h2>\n                        <span>Selecione um ou mais itens abaixo</span>\n                    </legend>\n\n                    <ul className=\"items-grid\">\n                        {items.map(item => (\n                        <li key={item.id} \n                            onClick={() => handleSelectItem(item.id)}\n                            className = {selectedItems.includes(item.id) ? 'selected' : ''}\n                        >\n                            <img src={item.image_url} alt={item.title}/>\n                            <span>{item.title}</span>\n                        </li>))}\n                    </ul>\n                </fieldset>\n   \n                <button type=\"submit\">\n                    Cadastrar ponto de coleta\n                </button>\n            </form>\n        </div>\n    );\n};\n\nexport default CreatePoint;"]},"metadata":{},"sourceType":"module"}