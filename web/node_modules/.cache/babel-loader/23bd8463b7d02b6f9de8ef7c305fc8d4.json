{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\mathe\\\\Desktop\\\\Cursos\\\\nlw1\\\\web\\\\src\\\\pages\\\\CreatePoint\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport { MapContainer, TileLayer, Marker } from 'react-leaflet';\nimport axios from 'axios';\nimport api from '../../services/api';\nimport './styles.css';\nimport logo from \"../../assets/logo.svg\"; //array ou objeto: manualmente informar o tipo da variavel\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreatePoint = () => {\n  _s();\n\n  const [items, setItems] = useState([]);\n  const [ufs, setUfs] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [initialPosition, setInitialPosition] = useState([0, 0]);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    whatsapp: ''\n  });\n  const [selectedUf, setSelectedUf] = useState('0');\n  const [selectedCity, setSelectedCity] = useState('0');\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [selectedPosition, setSelectedPosition] = useState([0, 0]);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      // console.log(position)\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setInitialPosition([latitude, longitude]);\n    });\n  }, []);\n  useEffect(() => {\n    api.get('items').then(response => {\n      setItems(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\n      const ufInitials = response.data.map(uf => uf.sigla);\n      setUfs(ufInitials);\n    });\n  }, []);\n  useEffect(() => {\n    //carregar as cidades sempre que a UF mandar\n    if (selectedUf === '0') {\n      return;\n    }\n\n    axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`).then(response => {\n      const cityNames = response.data.map(city => city.nome);\n      setCities(cityNames);\n    });\n  }, [selectedUf]);\n\n  function handleSelectUF(event) {\n    const uf = event.target.value;\n    setSelectedUf(uf);\n  }\n\n  function handleSelectCity(event) {\n    const city = event.target.value;\n    setSelectedUf(city);\n  }\n\n  function handleMapClick(event) {\n    setSelectedPosition([event.latlng.lat, event.latlng.lng]);\n  }\n\n  function handleImputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  }\n\n  function handleSelectItem(id) {\n    const alreadySelected = selectedItems.findIndex(item => item === id);\n\n    if (alreadySelected >= 0) {\n      const filteredItems = selectedItems.filter(item => item !== id);\n      setSelectedItems(filteredItems);\n    } else {\n      setSelectedItems([...selectedItems, id]);\n    }\n  }\n\n  function handleSubmit() {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-create-point\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Ecoleta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: [/*#__PURE__*/_jsxDEV(FiArrowLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), \"Voltar para home\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" Cadastro do \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 34\n        }, this), \" ponto de coleta\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Dados\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Nome da entidade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              id: \"name\",\n              onChange: handleImputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"E-mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              id: \"email\",\n              onChange: handleImputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Whatsapp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"whatsapp\",\n              id: \"whatsapp\",\n              onChange: handleImputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Endere\\xE7o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Selecione o endere\\xE7o no mapa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n          center: initialPosition,\n          zoom: 15,\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Marker, {\n            position: selectedPosition\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"uf\",\n              children: \"Estado (UF)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"uf\",\n              id: \"uf\",\n              value: selectedUf,\n              onChange: handleSelectUF,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"0\",\n                children: \"Selecione uma UF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 33\n              }, this), ufs.map(uf => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: uf,\n                children: uf\n              }, uf, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"city\",\n              children: \"Cidade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"city\",\n              id: \"city\",\n              value: selectedCity,\n              onChange: handleSelectCity,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"0\",\n                children: \"Selecione uma cidade\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 33\n              }, this), cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: city,\n                children: city\n              }, city, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Itens de coleta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Selecione um ou mais itens abaixo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"items-grid\",\n          children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleSelectItem(item.id),\n            className: selectedItems.includes(item.id) ? 'selected' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.image_url,\n              alt: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 29\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Cadastrar ponto de coleta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreatePoint, \"kQpXyi4rACGmdAckv7Nuzt+RBMI=\");\n\n_c = CreatePoint;\nexport default CreatePoint;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePoint\");","map":{"version":3,"sources":["D:/Users/mathe/Desktop/Cursos/nlw1/web/src/pages/CreatePoint/index.tsx"],"names":["React","useEffect","useState","Link","FiArrowLeft","MapContainer","TileLayer","Marker","axios","api","CreatePoint","items","setItems","ufs","setUfs","cities","setCities","initialPosition","setInitialPosition","formData","setFormData","name","email","whatsapp","selectedUf","setSelectedUf","selectedCity","setSelectedCity","selectedItems","setSelectedItems","selectedPosition","setSelectedPosition","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","get","then","response","data","ufInitials","map","uf","sigla","cityNames","city","nome","handleSelectUF","event","target","value","handleSelectCity","handleMapClick","latlng","lat","lng","handleImputChange","handleSelectItem","id","alreadySelected","findIndex","item","filteredItems","filter","handleSubmit","logo","includes","image_url","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAAuD,OAAvD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,MAAlC,QAAgD,eAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,OAAO,cAAP;0CAIA;;;;AAeA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAM,CAACW,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAW,EAAX,CAA9B;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAW,EAAX,CAApC;AAEA,QAAM,CAACe,eAAD,EAAkBC,kBAAlB,IAAyChB,QAAQ,CAAmB,CAAC,CAAD,EAAI,CAAJ,CAAnB,CAAvD;AAEA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC;AACrCmB,IAAAA,IAAI,EAAE,EAD+B;AAErCC,IAAAA,KAAK,EAAE,EAF8B;AAGrCC,IAAAA,QAAQ,EAAE;AAH2B,GAAD,CAAxC;AAMA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BvB,QAAQ,CAAC,GAAD,CAA5C;AACA,QAAM,CAACwB,YAAD,EAAeC,eAAf,IAAkCzB,QAAQ,CAAC,GAAD,CAAhD;AACA,QAAM,CAAC0B,aAAD,EAAgBC,gBAAhB,IAAoC3B,QAAQ,CAAW,EAAX,CAAlD;AACA,QAAM,CAAC4B,gBAAD,EAAmBC,mBAAnB,IAA2C7B,QAAQ,CAAmB,CAAC,CAAD,EAAI,CAAJ,CAAnB,CAAzD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ+B,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,QAAQ,IAAI;AACjD;AACA,YAAM;AAACC,QAAAA,QAAD;AAAWC,QAAAA;AAAX,UAAwBF,QAAQ,CAACG,MAAvC;AAEApB,MAAAA,kBAAkB,CAAC,CAACkB,QAAD,EAAWC,SAAX,CAAD,CAAlB;AACH,KALD;AAMH,GAPQ,EAON,EAPM,CAAT;AASApC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,GAAG,CAAC8B,GAAJ,CAAQ,OAAR,EAAiBC,IAAjB,CAAsBC,QAAQ,IAAI;AAC9B7B,MAAAA,QAAQ,CAAC6B,QAAQ,CAACC,IAAV,CAAR;AACH,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMAzC,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,KAAK,CAAC+B,GAAN,CAA4B,6DAA5B,EAA2FC,IAA3F,CAAgGC,QAAQ,IAAI;AACxG,YAAME,UAAU,GAAGF,QAAQ,CAACC,IAAT,CAAcE,GAAd,CAAkBC,EAAE,IAAIA,EAAE,CAACC,KAA3B,CAAnB;AAEAhC,MAAAA,MAAM,CAAC6B,UAAD,CAAN;AACH,KAJD;AAKH,GANQ,EAMN,EANM,CAAT;AAQA1C,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAGuB,UAAU,KAAK,GAAlB,EAAuB;AACnB;AACH;;AAEDhB,IAAAA,KAAK,CAAC+B,GAAN,CAA+B,+DAA8Df,UAAW,aAAxG,EAAsHgB,IAAtH,CAA2HC,QAAQ,IAAI;AACnI,YAAMM,SAAS,GAAGN,QAAQ,CAACC,IAAT,CAAcE,GAAd,CAAkBI,IAAI,IAAIA,IAAI,CAACC,IAA/B,CAAlB;AAEAjC,MAAAA,SAAS,CAAC+B,SAAD,CAAT;AACH,KAJD;AAKH,GAXQ,EAWN,CAACvB,UAAD,CAXM,CAAT;;AAaA,WAAS0B,cAAT,CAAwBC,KAAxB,EAA+D;AAC5D,UAAMN,EAAE,GAAGM,KAAK,CAACC,MAAN,CAAaC,KAAxB;AAEA5B,IAAAA,aAAa,CAACoB,EAAD,CAAb;AACF;;AAED,WAASS,gBAAT,CAA0BH,KAA1B,EAAiE;AAC7D,UAAMH,IAAI,GAAGG,KAAK,CAACC,MAAN,CAAaC,KAA1B;AAEA5B,IAAAA,aAAa,CAACuB,IAAD,CAAb;AACF;;AAEF,WAASO,cAAT,CAAwBJ,KAAxB,EAAiD;AAC7CpB,IAAAA,mBAAmB,CAAC,CAChBoB,KAAK,CAACK,MAAN,CAAaC,GADG,EAEhBN,KAAK,CAACK,MAAN,CAAaE,GAFG,CAAD,CAAnB;AAIH;;AAED,WAASC,iBAAT,CAA2BR,KAA3B,EAAiE;AAC7D,UAAM;AAAE9B,MAAAA,IAAF;AAAQgC,MAAAA;AAAR,QAAkBF,KAAK,CAACC,MAA9B;AAEAhC,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,OAACE,IAAD,GAAQgC;AAAvB,KAAD,CAAX;AACH;;AAED,WAASO,gBAAT,CAA0BC,EAA1B,EAAqC;AACjC,UAAMC,eAAe,GAAGlC,aAAa,CAACmC,SAAd,CAAwBC,IAAI,IAAIA,IAAI,KAAKH,EAAzC,CAAxB;;AAEA,QAAGC,eAAe,IAAI,CAAtB,EAAyB;AACrB,YAAMG,aAAa,GAAGrC,aAAa,CAACsC,MAAd,CAAqBF,IAAI,IAAIA,IAAI,KAAKH,EAAtC,CAAtB;AAEAhC,MAAAA,gBAAgB,CAACoC,aAAD,CAAhB;AACJ,KAJA,MAIM;AACHpC,MAAAA,gBAAgB,CAAC,CAAE,GAAGD,aAAL,EAAoBiC,EAApB,CAAD,CAAhB;AACH;AACH;;AAED,WAASM,YAAT,GAAwB,CAEvB;;AAED,sBACI;AAAK,IAAA,EAAE,EAAC,mBAAR;AAAA,4BACI;AAAA,8BACI;AAAK,QAAA,GAAG,EAAEC,IAAV;AAAgB,QAAA,GAAG,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAA,gCACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI;AAAM,MAAA,QAAQ,EAAED,YAAhB;AAAA,8BACI;AAAA,iDAAiB;AAAA;AAAA;AAAA;AAAA,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAA,+BACI;AAAA,kCACI;AAAA,mCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AACI,cAAA,IAAI,EAAC,MADT;AAEI,cAAA,IAAI,EAAC,MAFT;AAGI,cAAA,EAAE,EAAC,MAHP;AAII,cAAA,QAAQ,EAAER;AAJd;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eAcI;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AACI,cAAA,IAAI,EAAC,OADT;AAEI,cAAA,IAAI,EAAC,OAFT;AAGI,cAAA,EAAE,EAAC,OAHP;AAII,cAAA,QAAQ,EAAEA;AAJd;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdJ,eAwBI;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AACI,cAAA,IAAI,EAAC,MADT;AAEI,cAAA,IAAI,EAAC,UAFT;AAGI,cAAA,EAAE,EAAC,UAHP;AAII,cAAA,QAAQ,EAAEA;AAJd;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAHJ,eAwCI;AAAA,gCACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI,QAAC,YAAD;AAAc,UAAA,MAAM,EAAE1C,eAAtB;AAAuC,UAAA,IAAI,EAAE,EAA7C;AAAA,kCAEI,QAAC,SAAD;AACI,YAAA,WAAW,EAAC,0EADhB;AAEI,YAAA,GAAG,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAOI,QAAC,MAAD;AAAQ,YAAA,QAAQ,EAAEa;AAAlB;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAgBI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AACI,cAAA,IAAI,EAAC,IADT;AAEI,cAAA,EAAE,EAAC,IAFP;AAGI,cAAA,KAAK,EAAEN,UAHX;AAII,cAAA,QAAQ,EAAE0B,cAJd;AAAA,sCAMI;AAAQ,gBAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ,EAOKrC,GAAG,CAAC+B,GAAJ,CAAQC,EAAE,iBACP;AAAiB,gBAAA,KAAK,EAAEA,EAAxB;AAAA,0BAA6BA;AAA7B,iBAAaA,EAAb;AAAA;AAAA;AAAA;AAAA,sBADH,CAPL;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAeI;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,EAAE,EAAC,MAFL;AAGE,cAAA,KAAK,EAAEnB,YAHT;AAIE,cAAA,QAAQ,EAAE4B,gBAJZ;AAAA,sCAMI;AAAQ,gBAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ,EAOKvC,MAAM,CAAC6B,GAAP,CAAWI,IAAI,iBACZ;AAAmB,gBAAA,KAAK,EAAEA,IAA1B;AAAA,0BAAiCA;AAAjC,iBAAaA,IAAb;AAAA;AAAA;AAAA;AAAA,sBADH,CAPL;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAxCJ,eAwFI;AAAA,gCACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBACKrC,KAAK,CAACiC,GAAN,CAAUoB,IAAI,iBACf;AACI,YAAA,OAAO,EAAE,MAAMJ,gBAAgB,CAACI,IAAI,CAACH,EAAN,CADnC;AAEI,YAAA,SAAS,EAAIjC,aAAa,CAACyC,QAAd,CAAuBL,IAAI,CAACH,EAA5B,IAAkC,UAAlC,GAA+C,EAFhE;AAAA,oCAII;AAAK,cAAA,GAAG,EAAEG,IAAI,CAACM,SAAf;AAA0B,cAAA,GAAG,EAAEN,IAAI,CAACO;AAApC;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAA,wBAAOP,IAAI,CAACO;AAAZ;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA,aAASP,IAAI,CAACH,EAAd;AAAA;AAAA;AAAA;AAAA,kBADC;AADL;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAxFJ,eA0GI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1GJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2HH,CA1ND;;GAAMnD,W;;KAAAA,W;AA4NN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState, ChangeEvent} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FiArrowLeft } from 'react-icons/fi';\r\nimport { MapContainer, TileLayer, Marker } from 'react-leaflet';\r\nimport axios from 'axios';\r\nimport { LeafletMouseEvent } from 'leaflet';\r\nimport api from '../../services/api';\r\n\r\nimport './styles.css';\r\n\r\nimport logo from '../../assets/logo.svg'\r\n\r\n//array ou objeto: manualmente informar o tipo da variavel\r\ninterface Item {\r\n    id: number;\r\n    title: string;\r\n    image_url: string;\r\n}\r\n\r\ninterface IBGEUFResponse {\r\n    sigla: string;\r\n}\r\n\r\ninterface IBGECityResponse {\r\n    nome: string;\r\n}\r\n\r\nconst CreatePoint = () => {\r\n    const [items, setItems] = useState<Item[]>([]);\r\n    const [ufs, setUfs] = useState<string[]>([])\r\n    const [cities, setCities] = useState<string[]>([]);\r\n\r\n    const [initialPosition, setInitialPosition]  = useState<[number, number]>([0, 0]);\r\n\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        whatsapp: '',\r\n    })\r\n\r\n    const [selectedUf, setSelectedUf] = useState('0');\r\n    const [selectedCity, setSelectedCity] = useState('0');\r\n    const [selectedItems, setSelectedItems] = useState<number[]>([]);\r\n    const [selectedPosition, setSelectedPosition]  = useState<[number, number]>([0, 0]);\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition(position => {\r\n            // console.log(position)\r\n            const {latitude, longitude} = position.coords;\r\n\r\n            setInitialPosition([latitude, longitude])\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      api.get('items').then(response => {\r\n          setItems(response.data);\r\n      });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        axios.get<IBGEUFResponse[]>('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\r\n            const ufInitials = response.data.map(uf => uf.sigla)\r\n\r\n            setUfs(ufInitials);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        //carregar as cidades sempre que a UF mandar\r\n        if(selectedUf === '0') {\r\n            return;\r\n        }\r\n\r\n        axios.get<IBGECityResponse[]>(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`).then(response => {\r\n            const cityNames = response.data.map(city => city.nome)\r\n\r\n            setCities(cityNames);\r\n        });\r\n    }, [selectedUf]);\r\n\r\n    function handleSelectUF(event: ChangeEvent<HTMLSelectElement>) {\r\n       const uf = event.target.value;\r\n\r\n       setSelectedUf(uf);\r\n    }\r\n\r\n    function handleSelectCity(event: ChangeEvent<HTMLSelectElement>) {\r\n        const city = event.target.value;\r\n \r\n        setSelectedUf(city);\r\n     }\r\n\r\n    function handleMapClick(event: LeafletMouseEvent){\r\n        setSelectedPosition([\r\n            event.latlng.lat,\r\n            event.latlng.lng,\r\n        ])\r\n    }\r\n\r\n    function handleImputChange(event: ChangeEvent<HTMLInputElement>) {\r\n        const { name, value } = event.target;\r\n\r\n        setFormData({ ...formData, [name]: value })\r\n    }\r\n\r\n    function handleSelectItem(id: number){\r\n        const alreadySelected = selectedItems.findIndex(item => item === id);\r\n\r\n        if(alreadySelected >= 0) {\r\n            const filteredItems = selectedItems.filter(item => item !== id);\r\n\r\n            setSelectedItems(filteredItems);\r\n       } else {\r\n           setSelectedItems([ ...selectedItems, id])\r\n       }\r\n    }\r\n\r\n    function handleSubmit() {\r\n\r\n    }\r\n\r\n    return (\r\n        <div id=\"page-create-point\">\r\n            <header>\r\n                <img src={logo} alt=\"Ecoleta\" />\r\n            \r\n                <Link to=\"/\">\r\n                    <FiArrowLeft />\r\n                    Voltar para home\r\n                </Link>\r\n            </header>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <h1> Cadastro do <br /> ponto de coleta</h1>\r\n\r\n                <fieldset>\r\n                    <div>\r\n                        <legend>\r\n                            <h2>Dados</h2>\r\n                        </legend>\r\n        \r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"name\">Nome da entidade</label>\r\n                            <input \r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                id=\"name\"\r\n                                onChange={handleImputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"name\">E-mail</label>\r\n                            <input \r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                id=\"email\"\r\n                                onChange={handleImputChange}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"name\">Whatsapp</label>\r\n                            <input \r\n                                type=\"text\"\r\n                                name=\"whatsapp\"\r\n                                id=\"whatsapp\"\r\n                                onChange={handleImputChange}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n\r\n                <fieldset>\r\n                    <legend>\r\n                        <h2>Endereço</h2>\r\n                        <span>Selecione o endereço no mapa</span>\r\n                    </legend>\r\n\r\n                    <MapContainer center={initialPosition} zoom={15}>\r\n                    \r\n                        <TileLayer\r\n                            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                        />\r\n\r\n                        <Marker position={selectedPosition} />\r\n                    </MapContainer>\r\n\r\n                    <div className=\"field-group\">\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"uf\">Estado (UF)</label>\r\n                            <select \r\n                                name=\"uf\" \r\n                                id=\"uf\" \r\n                                value={selectedUf} \r\n                                onChange={handleSelectUF}\r\n                            >\r\n                                <option value=\"0\">Selecione uma UF</option>\r\n                                {ufs.map(uf => (\r\n                                    <option key={uf} value={uf}>{uf}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"city\">Cidade</label>\r\n                            <select \r\n                              name=\"city\" \r\n                              id=\"city\"\r\n                              value={selectedCity}\r\n                              onChange={handleSelectCity}\r\n                            >\r\n                                <option value=\"0\">Selecione uma cidade</option>\r\n                                {cities.map(city => (\r\n                                    <option key={city} value={city}>{city}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n\r\n                <fieldset>\r\n                    <legend>\r\n                        <h2>Itens de coleta</h2>\r\n                        <span>Selecione um ou mais itens abaixo</span>\r\n                    </legend>\r\n\r\n                    <ul className=\"items-grid\">\r\n                        {items.map(item => (\r\n                        <li key={item.id} \r\n                            onClick={() => handleSelectItem(item.id)}\r\n                            className = {selectedItems.includes(item.id) ? 'selected' : ''}\r\n                        >\r\n                            <img src={item.image_url} alt={item.title}/>\r\n                            <span>{item.title}</span>\r\n                        </li>))}\r\n                    </ul>\r\n                </fieldset>\r\n   \r\n                <button type=\"submit\">\r\n                    Cadastrar ponto de coleta\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreatePoint;"]},"metadata":{},"sourceType":"module"}